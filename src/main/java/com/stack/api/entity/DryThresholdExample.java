package com.stack.api.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class DryThresholdExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dry_threshold
     *
     * @mbg.generated Thu Aug 20 10:58:15 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dry_threshold
     *
     * @mbg.generated Thu Aug 20 10:58:15 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dry_threshold
     *
     * @mbg.generated Thu Aug 20 10:58:15 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dry_threshold
     *
     * @mbg.generated Thu Aug 20 10:58:15 CST 2020
     */
    public DryThresholdExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dry_threshold
     *
     * @mbg.generated Thu Aug 20 10:58:15 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dry_threshold
     *
     * @mbg.generated Thu Aug 20 10:58:15 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dry_threshold
     *
     * @mbg.generated Thu Aug 20 10:58:15 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dry_threshold
     *
     * @mbg.generated Thu Aug 20 10:58:15 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dry_threshold
     *
     * @mbg.generated Thu Aug 20 10:58:15 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dry_threshold
     *
     * @mbg.generated Thu Aug 20 10:58:15 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dry_threshold
     *
     * @mbg.generated Thu Aug 20 10:58:15 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dry_threshold
     *
     * @mbg.generated Thu Aug 20 10:58:15 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dry_threshold
     *
     * @mbg.generated Thu Aug 20 10:58:15 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dry_threshold
     *
     * @mbg.generated Thu Aug 20 10:58:15 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dry_threshold
     *
     * @mbg.generated Thu Aug 20 10:58:15 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDryThresholdIdIsNull() {
            addCriterion("dry_threshold_id is null");
            return (Criteria) this;
        }

        public Criteria andDryThresholdIdIsNotNull() {
            addCriterion("dry_threshold_id is not null");
            return (Criteria) this;
        }

        public Criteria andDryThresholdIdEqualTo(Integer value) {
            addCriterion("dry_threshold_id =", value, "dryThresholdId");
            return (Criteria) this;
        }

        public Criteria andDryThresholdIdNotEqualTo(Integer value) {
            addCriterion("dry_threshold_id <>", value, "dryThresholdId");
            return (Criteria) this;
        }

        public Criteria andDryThresholdIdGreaterThan(Integer value) {
            addCriterion("dry_threshold_id >", value, "dryThresholdId");
            return (Criteria) this;
        }

        public Criteria andDryThresholdIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("dry_threshold_id >=", value, "dryThresholdId");
            return (Criteria) this;
        }

        public Criteria andDryThresholdIdLessThan(Integer value) {
            addCriterion("dry_threshold_id <", value, "dryThresholdId");
            return (Criteria) this;
        }

        public Criteria andDryThresholdIdLessThanOrEqualTo(Integer value) {
            addCriterion("dry_threshold_id <=", value, "dryThresholdId");
            return (Criteria) this;
        }

        public Criteria andDryThresholdIdIn(List<Integer> values) {
            addCriterion("dry_threshold_id in", values, "dryThresholdId");
            return (Criteria) this;
        }

        public Criteria andDryThresholdIdNotIn(List<Integer> values) {
            addCriterion("dry_threshold_id not in", values, "dryThresholdId");
            return (Criteria) this;
        }

        public Criteria andDryThresholdIdBetween(Integer value1, Integer value2) {
            addCriterion("dry_threshold_id between", value1, value2, "dryThresholdId");
            return (Criteria) this;
        }

        public Criteria andDryThresholdIdNotBetween(Integer value1, Integer value2) {
            addCriterion("dry_threshold_id not between", value1, value2, "dryThresholdId");
            return (Criteria) this;
        }

        public Criteria andModelIsNull() {
            addCriterion("model is null");
            return (Criteria) this;
        }

        public Criteria andModelIsNotNull() {
            addCriterion("model is not null");
            return (Criteria) this;
        }

        public Criteria andModelEqualTo(String value) {
            addCriterion("model =", value, "model");
            return (Criteria) this;
        }

        public Criteria andModelNotEqualTo(String value) {
            addCriterion("model <>", value, "model");
            return (Criteria) this;
        }

        public Criteria andModelGreaterThan(String value) {
            addCriterion("model >", value, "model");
            return (Criteria) this;
        }

        public Criteria andModelGreaterThanOrEqualTo(String value) {
            addCriterion("model >=", value, "model");
            return (Criteria) this;
        }

        public Criteria andModelLessThan(String value) {
            addCriterion("model <", value, "model");
            return (Criteria) this;
        }

        public Criteria andModelLessThanOrEqualTo(String value) {
            addCriterion("model <=", value, "model");
            return (Criteria) this;
        }

        public Criteria andModelLike(String value) {
            addCriterion("model like", value, "model");
            return (Criteria) this;
        }

        public Criteria andModelNotLike(String value) {
            addCriterion("model not like", value, "model");
            return (Criteria) this;
        }

        public Criteria andModelIn(List<String> values) {
            addCriterion("model in", values, "model");
            return (Criteria) this;
        }

        public Criteria andModelNotIn(List<String> values) {
            addCriterion("model not in", values, "model");
            return (Criteria) this;
        }

        public Criteria andModelBetween(String value1, String value2) {
            addCriterion("model between", value1, value2, "model");
            return (Criteria) this;
        }

        public Criteria andModelNotBetween(String value1, String value2) {
            addCriterion("model not between", value1, value2, "model");
            return (Criteria) this;
        }

        public Criteria andTemperatureIsNull() {
            addCriterion("temperature is null");
            return (Criteria) this;
        }

        public Criteria andTemperatureIsNotNull() {
            addCriterion("temperature is not null");
            return (Criteria) this;
        }

        public Criteria andTemperatureEqualTo(Short value) {
            addCriterion("temperature =", value, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureNotEqualTo(Short value) {
            addCriterion("temperature <>", value, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureGreaterThan(Short value) {
            addCriterion("temperature >", value, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureGreaterThanOrEqualTo(Short value) {
            addCriterion("temperature >=", value, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureLessThan(Short value) {
            addCriterion("temperature <", value, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureLessThanOrEqualTo(Short value) {
            addCriterion("temperature <=", value, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureIn(List<Short> values) {
            addCriterion("temperature in", values, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureNotIn(List<Short> values) {
            addCriterion("temperature not in", values, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureBetween(Short value1, Short value2) {
            addCriterion("temperature between", value1, value2, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureNotBetween(Short value1, Short value2) {
            addCriterion("temperature not between", value1, value2, "temperature");
            return (Criteria) this;
        }

        public Criteria andWindPressureIsNull() {
            addCriterion("wind_pressure is null");
            return (Criteria) this;
        }

        public Criteria andWindPressureIsNotNull() {
            addCriterion("wind_pressure is not null");
            return (Criteria) this;
        }

        public Criteria andWindPressureEqualTo(Short value) {
            addCriterion("wind_pressure =", value, "windPressure");
            return (Criteria) this;
        }

        public Criteria andWindPressureNotEqualTo(Short value) {
            addCriterion("wind_pressure <>", value, "windPressure");
            return (Criteria) this;
        }

        public Criteria andWindPressureGreaterThan(Short value) {
            addCriterion("wind_pressure >", value, "windPressure");
            return (Criteria) this;
        }

        public Criteria andWindPressureGreaterThanOrEqualTo(Short value) {
            addCriterion("wind_pressure >=", value, "windPressure");
            return (Criteria) this;
        }

        public Criteria andWindPressureLessThan(Short value) {
            addCriterion("wind_pressure <", value, "windPressure");
            return (Criteria) this;
        }

        public Criteria andWindPressureLessThanOrEqualTo(Short value) {
            addCriterion("wind_pressure <=", value, "windPressure");
            return (Criteria) this;
        }

        public Criteria andWindPressureIn(List<Short> values) {
            addCriterion("wind_pressure in", values, "windPressure");
            return (Criteria) this;
        }

        public Criteria andWindPressureNotIn(List<Short> values) {
            addCriterion("wind_pressure not in", values, "windPressure");
            return (Criteria) this;
        }

        public Criteria andWindPressureBetween(Short value1, Short value2) {
            addCriterion("wind_pressure between", value1, value2, "windPressure");
            return (Criteria) this;
        }

        public Criteria andWindPressureNotBetween(Short value1, Short value2) {
            addCriterion("wind_pressure not between", value1, value2, "windPressure");
            return (Criteria) this;
        }

        public Criteria andDustIsNull() {
            addCriterion("dust is null");
            return (Criteria) this;
        }

        public Criteria andDustIsNotNull() {
            addCriterion("dust is not null");
            return (Criteria) this;
        }

        public Criteria andDustEqualTo(Short value) {
            addCriterion("dust =", value, "dust");
            return (Criteria) this;
        }

        public Criteria andDustNotEqualTo(Short value) {
            addCriterion("dust <>", value, "dust");
            return (Criteria) this;
        }

        public Criteria andDustGreaterThan(Short value) {
            addCriterion("dust >", value, "dust");
            return (Criteria) this;
        }

        public Criteria andDustGreaterThanOrEqualTo(Short value) {
            addCriterion("dust >=", value, "dust");
            return (Criteria) this;
        }

        public Criteria andDustLessThan(Short value) {
            addCriterion("dust <", value, "dust");
            return (Criteria) this;
        }

        public Criteria andDustLessThanOrEqualTo(Short value) {
            addCriterion("dust <=", value, "dust");
            return (Criteria) this;
        }

        public Criteria andDustIn(List<Short> values) {
            addCriterion("dust in", values, "dust");
            return (Criteria) this;
        }

        public Criteria andDustNotIn(List<Short> values) {
            addCriterion("dust not in", values, "dust");
            return (Criteria) this;
        }

        public Criteria andDustBetween(Short value1, Short value2) {
            addCriterion("dust between", value1, value2, "dust");
            return (Criteria) this;
        }

        public Criteria andDustNotBetween(Short value1, Short value2) {
            addCriterion("dust not between", value1, value2, "dust");
            return (Criteria) this;
        }

        public Criteria andSparkIsNull() {
            addCriterion("spark is null");
            return (Criteria) this;
        }

        public Criteria andSparkIsNotNull() {
            addCriterion("spark is not null");
            return (Criteria) this;
        }

        public Criteria andSparkEqualTo(Short value) {
            addCriterion("spark =", value, "spark");
            return (Criteria) this;
        }

        public Criteria andSparkNotEqualTo(Short value) {
            addCriterion("spark <>", value, "spark");
            return (Criteria) this;
        }

        public Criteria andSparkGreaterThan(Short value) {
            addCriterion("spark >", value, "spark");
            return (Criteria) this;
        }

        public Criteria andSparkGreaterThanOrEqualTo(Short value) {
            addCriterion("spark >=", value, "spark");
            return (Criteria) this;
        }

        public Criteria andSparkLessThan(Short value) {
            addCriterion("spark <", value, "spark");
            return (Criteria) this;
        }

        public Criteria andSparkLessThanOrEqualTo(Short value) {
            addCriterion("spark <=", value, "spark");
            return (Criteria) this;
        }

        public Criteria andSparkIn(List<Short> values) {
            addCriterion("spark in", values, "spark");
            return (Criteria) this;
        }

        public Criteria andSparkNotIn(List<Short> values) {
            addCriterion("spark not in", values, "spark");
            return (Criteria) this;
        }

        public Criteria andSparkBetween(Short value1, Short value2) {
            addCriterion("spark between", value1, value2, "spark");
            return (Criteria) this;
        }

        public Criteria andSparkNotBetween(Short value1, Short value2) {
            addCriterion("spark not between", value1, value2, "spark");
            return (Criteria) this;
        }

        public Criteria andSmokeIsNull() {
            addCriterion("smoke is null");
            return (Criteria) this;
        }

        public Criteria andSmokeIsNotNull() {
            addCriterion("smoke is not null");
            return (Criteria) this;
        }

        public Criteria andSmokeEqualTo(Short value) {
            addCriterion("smoke =", value, "smoke");
            return (Criteria) this;
        }

        public Criteria andSmokeNotEqualTo(Short value) {
            addCriterion("smoke <>", value, "smoke");
            return (Criteria) this;
        }

        public Criteria andSmokeGreaterThan(Short value) {
            addCriterion("smoke >", value, "smoke");
            return (Criteria) this;
        }

        public Criteria andSmokeGreaterThanOrEqualTo(Short value) {
            addCriterion("smoke >=", value, "smoke");
            return (Criteria) this;
        }

        public Criteria andSmokeLessThan(Short value) {
            addCriterion("smoke <", value, "smoke");
            return (Criteria) this;
        }

        public Criteria andSmokeLessThanOrEqualTo(Short value) {
            addCriterion("smoke <=", value, "smoke");
            return (Criteria) this;
        }

        public Criteria andSmokeIn(List<Short> values) {
            addCriterion("smoke in", values, "smoke");
            return (Criteria) this;
        }

        public Criteria andSmokeNotIn(List<Short> values) {
            addCriterion("smoke not in", values, "smoke");
            return (Criteria) this;
        }

        public Criteria andSmokeBetween(Short value1, Short value2) {
            addCriterion("smoke between", value1, value2, "smoke");
            return (Criteria) this;
        }

        public Criteria andSmokeNotBetween(Short value1, Short value2) {
            addCriterion("smoke not between", value1, value2, "smoke");
            return (Criteria) this;
        }

        public Criteria andAshPressureIsNull() {
            addCriterion("ash_pressure is null");
            return (Criteria) this;
        }

        public Criteria andAshPressureIsNotNull() {
            addCriterion("ash_pressure is not null");
            return (Criteria) this;
        }

        public Criteria andAshPressureEqualTo(Short value) {
            addCriterion("ash_pressure =", value, "ashPressure");
            return (Criteria) this;
        }

        public Criteria andAshPressureNotEqualTo(Short value) {
            addCriterion("ash_pressure <>", value, "ashPressure");
            return (Criteria) this;
        }

        public Criteria andAshPressureGreaterThan(Short value) {
            addCriterion("ash_pressure >", value, "ashPressure");
            return (Criteria) this;
        }

        public Criteria andAshPressureGreaterThanOrEqualTo(Short value) {
            addCriterion("ash_pressure >=", value, "ashPressure");
            return (Criteria) this;
        }

        public Criteria andAshPressureLessThan(Short value) {
            addCriterion("ash_pressure <", value, "ashPressure");
            return (Criteria) this;
        }

        public Criteria andAshPressureLessThanOrEqualTo(Short value) {
            addCriterion("ash_pressure <=", value, "ashPressure");
            return (Criteria) this;
        }

        public Criteria andAshPressureIn(List<Short> values) {
            addCriterion("ash_pressure in", values, "ashPressure");
            return (Criteria) this;
        }

        public Criteria andAshPressureNotIn(List<Short> values) {
            addCriterion("ash_pressure not in", values, "ashPressure");
            return (Criteria) this;
        }

        public Criteria andAshPressureBetween(Short value1, Short value2) {
            addCriterion("ash_pressure between", value1, value2, "ashPressure");
            return (Criteria) this;
        }

        public Criteria andAshPressureNotBetween(Short value1, Short value2) {
            addCriterion("ash_pressure not between", value1, value2, "ashPressure");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dry_threshold
     *
     * @mbg.generated do_not_delete_during_merge Thu Aug 20 10:58:15 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dry_threshold
     *
     * @mbg.generated Thu Aug 20 10:58:15 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}